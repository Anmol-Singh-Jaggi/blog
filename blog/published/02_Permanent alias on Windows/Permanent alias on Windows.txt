If you develop C++ programs on Windows, you might have felt the need to invoke the compiler from the command prompt itself. Its pretty easy to do so; just append the path of the compiler to the <a href="http://en.wikipedia.org/wiki/PATH_%28variable%29">PATH</a> environment variable.<br>
However, if you decide to invoke it with some compiler/linker options, you'll need to do some extra work. Unlike Linux, it is a bit tricky to create permanent aliases on Windows.<br>
<br>
Before discussing on how to do it on Windows, let me first illustrate how it is done on Linux -:<br>
<br>
Suppose you want to set <code>c+</code> as an alias to <code>c++ -Wall -Wextra</code>, simply create a file in your home folder named <code>.bash_aliases</code> and write the following into it -:<br>
<br>
<code>alias c+ = 'c++ -Wall -Wextra'</code>
<br>
<br>
Instead of writing the compiler options <code>-Wall -Wextra</code> directly, I prefer writing them in a separate file and then include them by specifying its path via the <code>@file</code> option of the GCC compiler, so that I don't have to write them again in my IDE's compiler settings.<br>
<br>
So, <code>.bash_aliases</code> now contains the following -:<br>
<br>
<code>alias c+ = 'c++ @/path/to/cpp-options.txt'</code>
<br>
<br>
where <code>cpp-options.txt</code> contains -:<br>
<br>
<code>-Wall -Wextra</code>
<br>
<br>
Now you can invoke the compiler by typing the following in a cmd shell -:<br>
<code>
c+ /path/to/code.cpp
</code>
<br>
<br>
In Windows, the closest thing to <a href="http://en.wikipedia.org/wiki/Alias_%28command%29">alias</a> is <a href="http://en.wikipedia.org/wiki/DOSKEY">doskey</a>. Despite being almost similar in functionality to its Linux counterpart, it has one key feature missing; it does not remain in effect after the current command shell session is closed.<br>
<br>
To try this, fire up a cmd shell and enter the following commands -:<br>
<code>
doskey c+ = c++ $*
c+ -v
</code>
<br>
<br>
It should display your compiler version.<br>
<br>
Now close this cmd shell, open up a new one and enter the following  -:<br>
<code>
c+ -v
</code>
<br>
<br>
It should display an error which says -:<br>
<blockquote>c+ is not recognized as an internal or external command, operable program or batch file.</blockquote>
<br>
One solution to this problem would be to somehow instruct <i>cmd.exe</i> to launch the doskey command every time it starts.<br>
To do this, we need to create 2 files -:<br>
<br>
1. <i>cmd_aliases.txt</i>, which will contain all the aliases -:<br>
<code>
c+ = c++ @/path/to/cpp-options.txt $*
</code>
<br>
<br>
2. <i>cmd_autorun.cmd</i>, which loads all those aliases from the first file everytime <i>cmd.exe</i> is invoked -:<br>
<code>
@echo off<br>
cls<br>
doskey /macrofile=%USERPROFILE%\Documents\cmd_aliases.txt
</code>
<br>
<br>
I am assuming these 2 files are kept in your <i>My Documents</i> folder, although you can keep them in any other folder you like.<br>
<br>
The <code>$*</code> option in the alias is to allow the use of command-line options along with <code>c+</code> command. Without it, you won't be able to specify the source-code and the output executable path when invoking the compiler with <code>c+</code>.<br>
The <code>/macrofile</code> parameter of the <code>doskey</code> command is used to load the aliases from an external file.<br>
<br>
Now we need to specify the location of this script in the registry so that it launches automatically along with <i>cmd.exe</i>.<br>
To do this, execute the following after copy-pasting it to a text file and saving it with .reg extension.<br>
<code>
Windows Registry Editor Version 5.00
<br>
[HKEY_CURRENT_USER\SOFTWARE\Microsoft\Command Processor]
"Autorun"="%USERPROFILE%/Documents/cmd_autorun.cmd"
</code>
For completeness, here are all the files which I use myself -:<br>
<br>
<i>cpp-options.txt -:</i><br>
<code>
-Wall -Wextra -Wfatal-errors -Wunreachable-code -Wfloat-equal -Winline -Wshadow -Wredundant-decls -Wcast-qual -Wcast-align -Wlogical-op -pedantic<br>
-std=c++14
</code><br>
<br>
<i>cmd_aliases.txt -:</i><br>
<code>
python2 = C:\Dev\Python27\python.exe $*<br>
python3 = C:\Dev\Python34\python.exe $*<br>
c+ = c++ @D:\anmol\coding\c++\cpp-options.txt $*
</code><br>
<br>
<i>cmd_autorun.cmd -:</i><br>
<code>
@echo off<br>
cls<br>
doskey /macrofile=%USERPROFILE%\Documents\cmd_aliases.txt<br>
</code>
<i>add_cmd_autorun.reg -:</i><br>
<code>
Windows Registry Editor Version 5.00<br>
<br>
[HKEY_CURRENT_USER\SOFTWARE\Microsoft\Command Processor]
"Autorun"="%USERPROFILE%/Documents/cmd_autorun.cmd"
</code>
